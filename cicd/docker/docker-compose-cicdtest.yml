services:
  nms:
    build: 
      context: .
      dockerfile: Dockerfile_build_linux
      target: cicdtest 
    image: ${DOCKER_PREFIX}_image_cicdnms
    container_name: ${DOCKER_PREFIX}_cicdnms 
    depends_on:      
      - postgresql
      - serviceswatcher
      - snmpscan
      - inventory
      - config
      - atopudpscan
      - scanservice
    stdin_open: true
    tty: true
  serviceswatcher:
    build: 
      context: .
      target: serviceswatcher
      dockerfile: Dockerfile_build_linux
    image: ${DOCKER_PREFIX}_image_serviceswatcher
    container_name: ${DOCKER_PREFIX}_serviceswatcher
    ports:
      - "8081:8081"
    command: run
  snmpscan:
    build: 
      context: .
      target: snmpscan
      dockerfile: Dockerfile_build_linux
    image: ${DOCKER_PREFIX}_image_snmpscan
    container_name: ${DOCKER_PREFIX}_snmpscan
    depends_on:
      - serviceswatcher
      - postgresql
    ports:
      - "8284:8284"
    command: run
  inventory:
    build:
      context: .
      target: inventory
      dockerfile: Dockerfile_build_linux
    image: ${DOCKER_PREFIX}_image_inventory
    container_name: ${DOCKER_PREFIX}_inventory
    depends_on:
      - postgresql
    ports:
      - "8101:8101"
      - "8111:8111"
    command: run
  config:
    build: 
      context: .
      target: config
      dockerfile: Dockerfile_build_linux
    image: ${DOCKER_PREFIX}_image_config
    container_name: ${DOCKER_PREFIX}_config
    depends_on:
      - serviceswatcher
      - postgresql
      - rabbitmq
    ports:
      - "8085:8085"
    command: run
  atopudpscan:
    build: 
      context: . 
      target: atopudpscan
      dockerfile: Dockerfile_build_linux
    image: ${DOCKER_PREFIX}_image_atopudpscan
    container_name: ${DOCKER_PREFIX}_atopudpscan
    depends_on:
      - serviceswatcher
      - postgresql
    network_mode: "host"
    command: run
  scanservice:
    build: 
      context: .
      target: scanservice
      dockerfile: Dockerfile_build_linux
    image: ${DOCKER_PREFIX}_image_scanservice
    container_name: ${DOCKER_PREFIX}_scanservice
    depends_on:
      - serviceswatcher
      - postgresql
    ports:
      - 8088:8088
      - 8098:8098
    extra_hosts:
      - "atopudpscan:host-gateway"
    command: run
 #
  # mongo:
  #   image: mongo

  # datastore:
  #   build: ../../datastore
  #   command: run
  #   ports:
  #     - 8082:8082

  # testing:
  #   build: ./testing
  #   depends_on:
  #     - serviceswatcher
  #     - postgresql

  # snmpsim:
  #   build: ./snmpscan/test/testdata

  redis:
    image: redis
    container_name: ${DOCKER_PREFIX}_redis

  postgresql:
    image: postgres
    container_name: ${DOCKER_PREFIX}_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=nms
    restart: always

  # nmsfrontend:
  #   build: ./frontend
  #   container_name: nmsfrontend_c
  #   ports:
  #     - 3000:3000
  #   stdin_open: true
  #   tty: true
    
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ${DOCKER_PREFIX}_rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
      - 1883:1883
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    command: "/bin/bash -c \"rabbitmq-plugins enable rabbitmq_mqtt; rabbitmq-server; sleep 1; rabbitmqctl set_permissions -p / guest '.*' '.*' '.*'\""
